name: UI Tests on Windows and MacOS 🧪

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
  workflow_run:
    workflows: [Build App Windows and MacOS 🧪]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            appium-driver: |
              appium driver install mac2
              appium driver list
            npm-test: mac.ci
            os-name: MacOS
          - os: windows-latest
            appium-driver: |
              appium driver install --source=npm appium-windows-driver
              appium driver list
            npm-test: windows.ci
            os-name: Windows
    runs-on: ${{ matrix.os }}
    outputs:
      results-macos: ${{ steps.add-passed-results-macos.outputs.results }}
      results-windows: ${{ steps.add-passed-results-windows.outputs.results }}

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - if: matrix.os == 'windows-latest'
        name: Change resolution on Windows Runner
        run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
        shell: powershell

      - if: matrix.os == 'macos-latest'
        name: Enable opening app not codesigned 🖥️
        run: sudo spctl --master-disable

      - if: matrix.os == 'macos-latest'
        name: Remove all notifications before starting tests 🖥️
        run: killall NotificationCenter

      - if: matrix.os == 'macos-latest'
        name: Copy DMG to Appium Apps Directory 💿
        working-directory: ./apps
        run: |
          unzip Uplink-Mac-Universal.zip
          cp -r ./Uplink.app /Applications/
          sudo xattr -r -d com.apple.quarantine /Applications/Uplink.app

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-mac-windows
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-mac-windows.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v

      - name: Install Appium Driver 💻
        run: ${{ matrix.appium-driver }}

      - if: matrix.os == 'macos-latest'
        name: Delete cache before starting on MacOS
        run: rm -rf ~/.uplink

      - if: matrix.os == 'windows-latest'
        name: Delete cache before starting on Windows
        run: If (Test-Path $home/.uplink) {Remove-Item -Recurse -Force $home/.uplink} Else { Break }
        shell: powershell

      - name: Run Tests
        run: npm run ${{ matrix.npm-test }}

      - name: Publish Test Results for ${{ matrix.os-name }}
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./test-report/*.xml"
          ignore_runs: true
          job_summary: false
          compare_to_earlier_commit: false
          check_name: "UI Automated Test Results on ${{ matrix.os-name}}"

      - name: Upload Screenshots for ${{ matrix.os-name }} 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots-${{ matrix.os-name }}
          path: ./test-results

      - name: Upload Appium Log for ${{ matrix.os-name }} 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log-${{ matrix.os-name }}
          path: ./appium.log

      - if: matrix.os == 'macos-latest'
        name: Upload Test User Accounts Created 📷
        uses: actions/upload-artifact@v3
        with:
          name: appium-test-accounts
          path: ./tests/fixtures/users/

      - if: always()
        name: Add results output for MacOS
        id: add-passed-results-macos
        uses: haya14busa/action-cond@v1
        with:
          cond: success() && matrix.os == 'macos-latest'
          if_true: echo "results-macos=true" >> "$GITHUB_OUTPUT"
          if_false: echo "results-macos=false" >> "$GITHUB_OUTPUT"

      - if: always()
        name: Add results output for Windows
        id: add-passed-results-windows
        uses: haya14busa/action-cond@v1
        with:
          cond: success() && matrix.os == 'macos-windows'
          if_true: echo "results-windows=true" >> "$GITHUB_OUTPUT"
          if_false: echo "results-windows=false" >> "$GITHUB_OUTPUT"

  test-chats:
    if: ${{ always() }}
    needs: test
    runs-on: macos-latest
    outputs:
      results-chatA: ${{ steps.add-passed-results-chatA.outputs.results }} || "failed"
      results-chatB: ${{ steps.add-passed-results-chatB.outputs.results }} || "failed"
    strategy:
      fail-fast: false
      matrix:
        user: ["ChatUserA", "ChatUserB"]
        include:
          - user: "ChatUserA"
            npm-command: "npm run mac.chatA"
          - user: "ChatUserB"
            npm-command: "npm run mac.chatB"

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Delete Test Account Data from Repo
        working-directory: ./tests/fixtures
        run: rm -rf ./users/

      - name: Download Test User Accounts 🗳️
        uses: actions/download-artifact@v3
        with:
          name: appium-test-accounts
          path: ./tests/fixtures/users/

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-appium
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-appium.outputs.cache-hit != 'true'
        run: npm ci

      - name: Enable opening app not codesigned 🖥️
        run: sudo spctl --master-disable

      - name: Remove all notifications before starting tests 🖥️
        run: killall NotificationCenter

      - name: Copy DMG to Appium Apps Directory 💿
        working-directory: ./apps
        run: |
          unzip Uplink-Mac-Universal.zip
          cp -r ./Uplink.app /Applications/
          sudo xattr -r -d com.apple.quarantine /Applications/Uplink.app

      - name: Install and Run Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v
          appium driver install mac2
          appium driver list

      - name: Delete Cache Folder if exists
        run: |
          rm -rf ~/.uplink
          cp -r ./tests/fixtures/users/${{ matrix.user }}/. ~/.uplink

      - name: Run WebdriverIO tests on MacOS 🧪
        run: ${{ matrix.npm-command }}

      - name: Upload Screenshots for ${{ matrix.user }} 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots-${{ matrix.user }}
          path: ./test-results

      - name: Upload Appium Log for ${{ matrix.user }} 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log-${{ matrix.user }}
          path: ./appium.log

      - if: always()
        name: Add results output for Chat User A
        id: add-passed-results-chatA
        uses: haya14busa/action-cond@v1
        with:
          cond: success() && matrix.user == 'ChatUserA'
          if_true: echo "results-chatA=true" >> "$GITHUB_OUTPUT"
          if_false: echo "results-chatA=false" >> "$GITHUB_OUTPUT"

      - if: always()
        name: Add results output for Chat User B
        id: add-passed-results-chatB
        uses: haya14busa/action-cond@v1
        with:
          cond: success() && matrix.user == 'ChatUserB'
          if_true: echo "results-chatB=true" >> "$GITHUB_OUTPUT"
          if_false: echo "results-chatB=false" >> "$GITHUB_OUTPUT"

  add-label:
    needs: [test, test-chats]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - if: ${{ needs.test.outputs.results-macos == 'false' || needs.test.outputs.results-windows == 'false' || needs.test-chats.outputs.results-chatA == 'false' || needs.test-chats.outputs.results-chatB == 'false' }}
        name: Add label if any of test jobs failed
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            "Failed Automated Test"
          type: add

      - if: ${{ needs.test.outputs.results-macos == 'true' && needs.test.outputs.results-windows == 'true' && needs.test-chats.outputs.results-chatA == 'true' && needs.test-chats.outputs.results-chatB == 'true' }}
        name: Remove label if all test jobs succeeded
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            "Failed Automated Test"
          type: remove

      - if: ${{ needs.test-chats.outputs.results-chatA == 'true' && needs.test-chats.outputs.results-chatB == 'true' }}
        name: Delete Chat Users Accounts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: appium-test-accounts
