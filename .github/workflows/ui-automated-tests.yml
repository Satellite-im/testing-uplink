name: UI Tests on Windows and MacOS 🧪

on:
  schedule:
    - cron: "0 0/6 * * 1-5"
  pull_request:
    types: [opened, synchronize, reopened, edited]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3
        with:
          repository: Satellite-im/Uplink

      - name: Set up cargo cache 🛠️
        uses: Swatinem/rust-cache@v2

      - name: Install Rust 💿
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.68.2
          override: true
          components: rustfmt, clippy

      - name: Install Protobuf 💿
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{env.GITHUB_TOKEN}}

      - name: Add Targets for MacOS
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.13"
        run: |
          rustup target add x86_64-apple-darwin aarch64-apple-darwin

      - name: Run cargo update 🌐
        run: cargo update

      - name: Build executable 🖥️
        run: make dmg
        continue-on-error: true

      - name: Create ZIP archive on MacOS 🗳️
        run: |
          ditto -c -k --sequesterRsrc --keepParent target/release/macos/Uplink.app Uplink-Mac-Universal.zip

      - name: Calculate hashes 🧮
        run: |
          shasum -a 256 Uplink-Mac-Universal.zip > Uplink-Mac-Universal.zip.sha256.txt

      - name: Upload Artifact ⬆️
        uses: actions/upload-artifact@v3
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        with:
          name: Uplink-macos-latest
          path: |
            Uplink-Mac-Universal.zip
            Uplink-Mac-Universal.zip.sha256.txt

      - name: Add label if any of build jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  build-windows:
    runs-on:
      labels: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3
        with:
          repository: Satellite-im/Uplink

      - name: Set up cargo cache 🛠️
        uses: Swatinem/rust-cache@v2

      - name: Install Rust 💿
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.68.2
          override: true
          components: rustfmt, clippy

      - name: Install Protobuf 💿
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{env.GITHUB_TOKEN}}

      - name: Run cargo update 🌐
        run: cargo update

      - name: Build executable 🖥️
        run: cargo build --release --package uplink -F production_mode
        continue-on-error: true

      - name: Create ZIP archive on Windows 🗳️
        run: Compress-Archive -Path target/release/uplink.exe -Destination uplinkWindows.zip

      - name: Upload Executable ⬆️
        uses: actions/upload-artifact@v3
        with:
          name: Uplink-windows-latest
          path: uplinkWindows.zip

      - name: Add label if any of build jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  test-mac:
    needs: build-mac
    runs-on: macos-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Download the MacOS app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-macos-latest
          path: ./apps

      - name: Enable opening app not codesigned 🖥️
        run: sudo spctl --master-disable

      - name: Copy DMG to Appium Apps Directory 💿
        working-directory: ./apps
        run: |
          unzip Uplink-Mac-Universal.zip
          cp -r ./Uplink.app /Applications/
          sudo xattr -r -d com.apple.quarantine /Applications/Uplink.app

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-mac
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-mac.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v

      - name: Install Appium Driver 💻
        run: |
          appium driver install mac2
          appium driver list

      - name: Update MacOS runner to not autocorrect text
        run: |
          defaults write -g NSAutomaticCapitalizationEnabled -bool false
          defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false
          defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false

      - name: Delete Cache Folder if exists - Mac
        run: rm -rf ~/.uplink

      - name: Run Tests on MacOS 🧪
        run: npm run mac.ci

      - name: Publish Test Results for MacOS
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./test-report/*.xml"
          ignore_runs: true
          job_summary: false
          compare_to_earlier_commit: false
          check_name: "UI Automated Test Results on MacOS"

      - name: Upload Screenshots for MacOS 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots-MacOS
          path: ./test-results

      - name: Upload Appium Log for MacOS 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log-macos
          path: ./appium-ci.log

      - name: Add label if any of test jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  test-mac-chats:
    needs: build-mac
    runs-on: macos-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Download the MacOS app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-macos-latest
          path: ./apps

      - name: Enable opening app not codesigned 🖥️
        run: sudo spctl --master-disable

      - name: Copy DMG to Appium Apps Directory 💿
        working-directory: ./apps
        run: |
          unzip Uplink-Mac-Universal.zip
          cp -r ./Uplink.app ./Uplink2.app
          perl -i -pe 's/>im.satellite.uplink</>im.satellite.uplinkChatUserA</g' ./Uplink.app/Contents/Info.plist
          perl -i -pe 's/>im.satellite.uplink</>im.satellite.uplinkChatUserB</g' ./Uplink2.app/Contents/Info.plist
          cp -r ./Uplink.app /Applications/
          cp -r ./Uplink2.app /Applications/
          sudo xattr -r -d com.apple.quarantine /Applications/Uplink.app
          sudo xattr -r -d com.apple.quarantine /Applications/Uplink2.app

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-mac-chats
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-mac-chats.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v

      - name: Install Appium Driver 💻
        run: |
          appium driver install mac2
          appium driver list

      - name: Update MacOS runner to not autocorrect text
        run: |
          defaults write -g NSAutomaticCapitalizationEnabled -bool false
          defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false
          defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false

      - name: Run Chat Tests on MacOS 🧪
        run: npm run mac.multiremote

      - name: Publish Test Results for Chats Tests
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./test-report/*.xml"
          ignore_runs: true
          job_summary: false
          compare_to_earlier_commit: false
          check_name: "UI Automated Test Results on Chats Tests"

      - name: Upload Screenshots for MacOS - Chats 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots-MacOS-chats
          path: ./test-results

      - name: Upload Appium Log for MacOS - Chats 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log-macos-chats
          path: |
            ./appium-chat-a.log
            ./appium-chat-b.log

      - name: Add label if any of test jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  test-windows:
    needs: build-windows
    runs-on: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Change resolution on Windows Runner
        run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
        shell: powershell

      - name: Download the Windows app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-windows-latest
          path: ./apps

      - name: Extract .zip into apps Directory 🗳️
        run: Expand-Archive -Path ./apps/uplinkWindows.zip -DestinationPath ./apps

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-windows
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-windows.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install and Run Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v

      - name: Install Appium Driver 💻
        run: |
          appium driver install --source=npm appium-windows-driver
          appium driver list

      - name: Delete Cache Folder if exists - Windows
        run: If (Test-Path $home/.uplink) {Remove-Item -Recurse -Force $home/.uplink} Else { Break }
        shell: powershell

      - name: Run Tests on Windows 🧪
        id: test-execution-windows
        run: npm run windows.ci

      - name: Publish Test Results for Windows
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./test-report/*.xml"
          ignore_runs: true
          job_summary: false
          compare_to_earlier_commit: false
          check_name: "UI Automated Test Results on Windows"

      - name: Upload Screenshots for Windows 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots-windows
          path: ./test-results

      - name: Upload Appium Log for Windows 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log-windows
          path: ./appium-ci.log

      - name: Add label if any of test jobs failed
        if: failure()
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: add

  remove-artifacts:
    needs: [build-mac, build-windows, test-mac, test-mac-chats, test-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Remove label if all test jobs succeeded
        uses: buildsville/add-remove-label@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Failed Automated Test
          type: remove

      - name: Delete Chat Users Accounts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: appium-test-accounts

      - name: Delete app Windows
        uses: geekyeggo/delete-artifact@v2
        with:
          name: Uplink-windows-latest

      - name: Delete app MacOS
        uses: geekyeggo/delete-artifact@v2
        with:
          name: Uplink-macos-latest
