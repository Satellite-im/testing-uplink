name: Build App Windows and MacOS 🧪

on:
  schedule:
    - cron: "0 0/6 * * 1-5"
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

jobs:
  build-app:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            build-instruction: make dmg
          - os: windows-latest
            build-instruction: cargo build --release --package uplink -F production_mode
    runs-on:
      labels: ${{ matrix.os }}
    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3
        with:
          repository: Satellite-im/Uplink

      - name: Set up cargo cache 🛠️
        uses: Swatinem/rust-cache@v2

      - name: Install Rust 💿
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.68.2
          override: true
          components: rustfmt, clippy

      - name: Install Protobuf 💿
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{env.GITHUB_TOKEN}}

      - name: Patch Makefile to remove --production-mode flag 🌐
        run: |
          perl -i -pe 's/--production-mode//g' Makefile

      - name: Run cargo update 🌐
        run: cargo update

      - name: Build executable 🖥️
        run: ${{ matrix.build-instruction }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: Create ZIP archive 🗳️
        run: |
          ditto -c -k --sequesterRsrc --keepParent target/release/macos/Uplink.app Uplink-Mac-Universal.zip

      - if: matrix.os == 'macos-latest'
        name: Calculate hashes 🧮
        run: |
          shasum -a 256 Uplink-Mac-Universal.zip > Uplink-Mac-Universal.zip.sha256.txt

      - if: matrix.os == 'macos-latest'
        name: Upload Artifact ⬆️
        uses: actions/upload-artifact@v3
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        with:
          name: Uplink-macos-latest
          path: |
            Uplink-Mac-Universal.zip
            Uplink-Mac-Universal.zip.sha256.txt

      - if: matrix.os == 'windows-latest'
        name: Upload Executable ⬆️
        uses: actions/upload-artifact@v3
        with:
          name: Uplink-windows-latest
          path: target\release\uplink.exe

  push-app:
    needs: build-app
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Delete contents from apps folder 🧹
        run: rm -rf ./apps

      - name: Download the MacOS app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-macos-latest
          path: ./apps

      - name: Download the Windows app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-windows-latest
          path: ./apps

      - name: Commit and push changes ⬆️
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(appium): automated push of latests Uplinks builds"
          push_options: "--force"
