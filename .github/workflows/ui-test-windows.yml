name: UI Automated Tests on Windows 🧪

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

concurrency:
  # For pull requests, cancel all currently-running jobs for this workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3
        with:
          repository: Satellite-im/Uplink

      - name: Set up cargo cache 🛠️
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            C:\Users\runneradmin\.cargo\bin\
            C:\Users\runneradmin\.cargo\registry\index\
            C:\Users\runneradmin\.cargo\registry\cache\
            C:\Users\runneradmin\.cargo\git\db\
            target\
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install Rust 💿
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install Protoc 💿
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{env.GITHUB_TOKEN}}

      - name: Run cargo update 🌐
        run: cargo update

      - name: Run cargo clean 🧹
        run: cargo clean

      - name: Build resources 🖥️
        run: cargo build --package ui --release

      - name: Upload Artifact ⬆️
        uses: actions/upload-artifact@v3
        with:
          name: Uplink-Windows
          path: |
            target/release/ui.exe

  test-on-windows:
    needs: build-windows
    runs-on: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Cache NPM dependencies 🔨
        uses: actions/cache@v3
        id: cache-appium
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install NPM dependencies 📦
        if: steps.cache-appium.outputs.cache-hit != 'true'
        run: npm ci

      - name: Download the app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-Windows
          path: ./apps

      - name: Install and Run Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v
          appium driver install --source=npm appium-windows-driver
          appium driver list

      - name: Delete cache folder before starting
        run: If (Test-Path $home/.uplink) {Remove-Item -Recurse -Force $home/.uplink} Else { Break }
        shell: powershell

      - name: Run WebdriverIO tests on MacOS 🧪
        run: npm run windows.ci

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "./test-report/*.xml"
          check_name: "UI Automated Test Results on Windows"

      - name: Upload Screenshots if tests failed 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-screenshots
          path: ./test-results

      - name: Upload Appium Log if tests failed 📷
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: appium-log
          path: ./appium.log

      - name: Take screenshot of GH runner if test execution fails 📷
        uses: OrbitalOwen/desktop-screenshot-action@0.1
        if: failure()
        with:
          file-name: "desktop.jpg"

  two-users-first:
    needs: build-windows
    runs-on: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Cache NPM dependencies 📦
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Download the app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-Windows
          path: ./apps

      - name: Install and Run Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v
          appium driver install --source=npm appium-windows-driver
          appium driver list

      - name: Delete cache folder before starting
        run: If (Test-Path $home/.uplink) {Remove-Item -Recurse -Force $home/.uplink} Else { Break }
        shell: powershell

      - name: Run WebdriverIO tests on MacOS 🧪
        run: npm run windows.chat --spec tests/specs/13-chats-userA.spec.ts

  two-users-second:
    needs: build-windows
    runs-on: windows-latest

    steps:
      - name: Checkout testing directory 🔖
        uses: actions/checkout@v3

      - name: Setup Node.js 🔨
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Cache NPM dependencies 📦
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Download the app 🗳️
        uses: actions/download-artifact@v3
        with:
          name: Uplink-Windows
          path: ./apps

      - name: Install and Run Appium Server 💻
        run: |
          npm install -g appium@next
          appium -v
          appium driver install --source=npm appium-windows-driver
          appium driver list

      - name: Delete cache folder before starting
        run: If (Test-Path $home/.uplink) {Remove-Item -Recurse -Force $home/.uplink} Else { Break }
        shell: powershell

      - name: Run WebdriverIO tests on MacOS 🧪
        run: npm run windows.chat --spec tests/specs/14-chats-userB.spec.ts
