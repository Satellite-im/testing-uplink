import UplinkMainScreen from "../UplinkMainScreen";

const currentOS = driver["userA"].capabilities.automationName;
let SELECTORS = {};

const SELECTORS_COMMON = {
  CHAT_LAYOUT: "~chat-layout",
};

const SELECTORS_WINDOWS = {
  ADD_MESSAGE_REACTION: '[name="add-message-reaction"]',
  REACTION_100: '[name="üíØ"]',
  REACTION_CRY: '[name="üò¢"]',
  REACTION_HEART: '[name="‚ù§Ô∏è"]',
  REACTION_HEART_EYES: '[name="üòç"]',
  REACTION_LAUGH: '[name="üòÇ"]',
  REACTION_LIKE: '[name="üëç"]',
  REACTION_OPEN_MOUTH: '[name="üòÆ"]',
  REACTION_RAGE: '[name="üò°"]',
  REACTION_SUNGLASSES: '[name="üòé"]',
  REACTION_THINKING: '[name="ü§î"]',
};

const SELECTORS_MACOS = {
  ADD_MESSAGE_REACTION: "~add-message-reaction",
  REACTION_100: "~üíØ",
  REACTION_CRY: "~üò¢",
  REACTION_HEART: "~‚ù§Ô∏è",
  REACTION_HEART_EYES: "~üòç",
  REACTION_LAUGH: "~üòÇ",
  REACTION_LIKE: "~üëç",
  REACTION_OPEN_MOUTH: "~üòÆ",
  REACTION_RAGE: "~üò°",
  REACTION_SUNGLASSES: "~üòé",
  REACTION_THINKING: "~ü§î",
};

currentOS === "windows"
  ? (SELECTORS = { ...SELECTORS_WINDOWS, ...SELECTORS_COMMON })
  : (SELECTORS = { ...SELECTORS_MACOS, ...SELECTORS_COMMON });

export default class ReactionPicker extends UplinkMainScreen {
  constructor(executor: string) {
    super(executor, SELECTORS.ADD_MESSAGE_REACTION);
  }

  get reaction100 {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_100)
  }

  get reactionCry {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_CRY)
  }

  get reactionHeart {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_HEART)
  }

  get reactionHeartEyes {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_HEART_EYES)
  }

  get reactionLaugh {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_LAUGH)
  }

  get reactionLike {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_LIKE)
  }

  get reactionOpenMouth {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_OPEN_MOUTH)
  }

  get reactionRage {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_RAGE)
  }

  get reactionSunglasses {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_SUNGLASSES)
  }

  get reactionThinking {
    return this.instance.$(SELECTORS.ADD_MESSAGE_REACTION).$(SELECTORS.REACTION_THINKING)
  }
}
